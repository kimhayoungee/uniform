/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.49
 * Generated at: 2020-03-26 08:24:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.ea;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class gianPop_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t\t<title>결재선 지정</title>\r\n");
      out.write("\t\t<script type=\"text/javascript\"\r\n");
      out.write("\t\t\t\tsrc=\"https://code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#gian_btn\").click(function(){\r\n");
      out.write("\t\t\t\t\tconsole.log(\"gian_btn 클릭\");\r\n");
      out.write("\t\t\t\t\tconsole.log(\"gian.val > \" + $(\"#gian\").val());\r\n");
      out.write("\t\t\t\t\tif($(\"#gian\").val()==\"fullLine\"){\r\n");
      out.write("\t\t\t\t\t\tconsole.log(\"전체라인\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#ea_linename\").val(\"기안\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif($(\"#gian\").val()==\"arbitraryLine\"){\r\n");
      out.write("\t\t\t\t\t\tconsole.log(\"전결라인\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#ea_linename\").val(\"기안전결\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\topener.linename($(\"#ea_linename\").val());\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\twindow.close();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#full_btn\").click(function(){\r\n");
      out.write("\t\t\t\t\t$(\"#ea_linename\").val(\"기안\");\r\n");
      out.write("\t\t\t\t\topener.linename($(\"#ea_linename\").val());\r\n");
      out.write("\t\t\t\t\twindow.close();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#arbi_btn\").click(function(){\r\n");
      out.write("\t\t\t\t\t$(\"#ea_linename\").val(\"기안전결\");\r\n");
      out.write("\t\t\t\t\topener.linename($(\"#ea_linename\").val());\r\n");
      out.write("\t\t\t\t\twindow.close();\r\n");
      out.write("\t\t\t\t});\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#cancel_btn\").click(function(){\r\n");
      out.write("\t\t\t\t\twindow.close();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<style>\r\n");
      out.write("\t\t\tinput.blue_btn {\r\n");
      out.write("\t\t\t    min-width: 48px;\r\n");
      out.write("\t\t\t   background: #295e9c;\r\n");
      out.write("\t\t\t   color: #fff;\r\n");
      out.write("\t\t\t   border: 1px solid #333333;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tinput.grey_btn {\r\n");
      out.write("\t\t\t   min-width: 48px;\r\n");
      out.write("\t\t\t   background: #f3f3f3;\r\n");
      out.write("\t\t\t   color: #33333;\r\n");
      out.write("\t\t\t   border: 1px solid #d0d0d0;\r\n");
      out.write("\t\t\t}\t\t\r\n");
      out.write("\t\t</style>\t\t\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<form name=\"gianForm\" id=\"gianForm\">\r\n");
      out.write("\t\t\t<div align=\"center\">\r\n");
      out.write("\t\t\t\t<br><br><br>\r\n");
      out.write("<!-- \t\t\t\t<select name=\"gian\" id=\"gian\" > -->\r\n");
      out.write("<!-- \t\t\t\t\t<option value=\"fullLine\">기안서 라인</option> -->\r\n");
      out.write("<!-- \t\t\t\t\t<option value=\"arbitraryLine\">기안서 전결 라인</option> -->\r\n");
      out.write("<!-- \t\t\t\t</select> -->\r\n");
      out.write("\t\t\t\t<input type=\"button\" name=full_btn id=\"full_btn\" value=\"전체 결재선 \" class=\"blue_btn\">&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t<input type=\"button\" name=\"arbi_btn\" id=\"arbi_btn\" value=\"전결  \" class=\"grey_btn\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"ea_linename\" id=\"ea_linename\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
